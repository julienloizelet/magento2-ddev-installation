name: End-to-end tests
on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
  workflow_dispatch:

permissions:
  contents: write

env:
  # Allow ddev get to use a GitHub token to prevent rate limiting by tests
  DDEV_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  end-to-end-test-suite:
    strategy:
      fail-fast: false
      matrix:
        # Latest 2 patches for the current minor, and latest one for the previous minor, greatest php version
        include:
          - m2-version: '2.3.7-p4'
            php-version: '7.4'
            magento-repository: 'https://repo.magento.com/'
          - m2-version: '2.4.7'
            php-version: '8.3'
            magento-repository: 'https://mirror.mage-os.org/'
          - m2-version: '2.4.8'
            php-version: '8.4'
            magento-repository: 'https://repo.magento.com/'


    name: End-to-end test suite
    if: ${{ !contains(github.event.head_commit.message, 'chore(') }}
    runs-on: ubuntu-latest
    env:
      EXTENSION_PACKAGE_NAME: "okaeli/magento2-category-code"
      EXTENSION_NAME: "Okaeli_CategoryCode"
      EXTENSION_PATH: "category-code"
      EXTENSION_GITHUB_URL: "julienloizelet/magento2-category-code"
      EXTENSION_REF: "v1.1.14"

    steps:

      - name: Clone current repository
        uses: actions/checkout@v4

      - name: Install Magento 2 with DDEV
        uses: ./
        id: magento_install
        with:
          php_version: ${{ matrix.php-version }}
          magento_version: ${{ matrix.m2-version }}
          magento_repository: ${{ matrix.magento-repository }}
          composer_auth: ${{ secrets.M2_COMPOSER_AUTH }}

      - name: Add playwright to DDEV
        run: |
          ddev add-on get julienloizelet/ddev-playwright

      - name: Clone M2 ${{ env.EXTENSION_NAME }} files
        uses: actions/checkout@v4
        with:
          path: my-own-modules/${{ env.EXTENSION_PATH }}
          repository: ${{ env.EXTENSION_GITHUB_URL }}
          ref: ${{ env.EXTENSION_REF }}

      - name: DDEV start
        run: ddev start

      - name: Validate composer.json
        run: ddev composer validate --working-dir ./my-own-modules/${{ env.EXTENSION_PATH }}

      - name: Prepare composer repositories
        run: |
          ddev composer config --unset repositories.0
          ddev exec --raw composer config repositories.0 '{"type": "path", "url":"my-own-modules/${{ env.EXTENSION_PATH }}/",  "canonical": true}'
          ddev exec --raw composer config repositories.1 '{"type": "composer", "url":"${{ matrix.magento-repository }}",  "exclude": ["${{ env.EXTENSION_PACKAGE_NAME }}"]}'

      - name: Add ${{ env.EXTENSION_NAME }} as composer dependency
        run: |
          ddev composer require ${{ env.EXTENSION_PACKAGE_NAME }}:@dev --no-interaction

      - name: Disable some extensions for >= 2.4.7
        if: contains(fromJson('["2.4.7","2.4.8"]'),matrix.m2-version)
        run: |
          ddev magento module:disable Magento_AdminAdobeImsTwoFactorAuth

      - name: Disable some extensions for 2.4
        if: startsWith(matrix.m2-version, '2.4')
        run: |
          ddev magento module:disable Magento_TwoFactorAuth
          ddev magento module:disable Magento_AdminNotification

      - name: Make some workaround for some M2 versions
        if: contains(fromJson('["2.3.7"]'),matrix.m2-version)
        run: |
          ddev magento  module:disable Dotdigitalgroup_Chat
          ddev magento  module:disable Dotdigitalgroup_Email

      - name: Enable extension
        run: |
          ddev magento deploy:mode:set developer
          ddev magento module:enable ${{ env.EXTENSION_NAME }}
          ddev magento setup:upgrade
          ddev magento setup:static-content:deploy -f
          ddev magento cache:flush

      - name: Prepare for playwright test
        run: |
          # Copy the test layout
          cd my-own-modules/${{ env.EXTENSION_PATH }}
          mkdir -p view/frontend/layout
          cp Test/EndToEnd/layout-update-test-file/catalog_category_code_test_code_1.xml.dist view/frontend/layout/catalog_category_code_test_code_1.xml
          cd ${{ github.workspace }}
          # Override the Playwright test folder
          echo -e "services:\n  playwright:\n    environment:\n      - PLAYWRIGHT_TEST_DIR=my-own-modules/${{ env.EXTENSION_PATH }}/Test/EndToEnd" > .ddev/docker-compose.override.yaml
          ddev restart
          # Add some fixture data
          ddev magento setup:performance:generate-fixtures setup/performance-toolkit/profiles/ce/small.xml
          # Set base url in Playwright config
          sed -i 's|CHANGE_BASE_URL|${{ steps.magento_install.outputs.m2_url }}|g' my-own-modules/${{ env.EXTENSION_PATH }}/Test/EndToEnd/.env.example
          # Install Playwright
          ddev playwright-install
          ddev magento cache:flush

      - name: Run category page test
        run: ddev playwright test category.test



